import { CodeBlock } from "./code-block";
import { SideContent } from "./side-content";
import React from "react";

interface CodeEditorProps {
  fileName: string;
  fileType: string;
}

const fileContents: Record<string, string> = {
  _sobre: `console.log("Bem-vindo ao meu portf√≥lio! üëã");

// Ol√°! Eu sou um desenvolvedor apaixonado
const developer = {
  name: "Othavio Quili√£o",
  role: "Full Stack Developer",
  location: "Brasil - Curitiba",
  status: "Dispon√≠vel para oportunidades",
};
`,

  _projetos: `// Meus Projetos em Destaque üöÄ

const projetos = [
  {
    nome: "Plataforma E-commerce",
    tech: ["Next.js", "TypeScript", "Stripe", "PostgreSQL"],
    descricao: "E-commerce full-stack com dashboard admin",
    status: "Produ√ß√£o",
    github: "github.com/usuario/ecommerce",
    live: "minhaloja.vercel.app",
    destaques: [
      "üí≥ Processamento de pagamentos integrado",
      "üìä Dashboard de analytics em tempo real",
      "üîê Sistema de autentica√ß√£o JWT",
      "üì± Design completamente responsivo"
    ]
  },

  {
    nome: "App de Gerenciamento de Tarefas",
    tech: ["React", "Node.js", "MongoDB", "Socket.io"],
    descricao: "Ferramenta colaborativa de gest√£o de projetos",
    status: "Desenvolvimento",
    github: "github.com/usuario/taskapp",
    destaques: [
      "‚ö° Colabora√ß√£o em tempo real",
      "üéØ Interface drag & drop",
      "üìà Acompanhamento de progresso",
      "üë• Gest√£o de equipes"
    ]
  },

  {
    nome: "Dashboard do Clima",
    tech: ["Vue.js", "Express", "OpenWeather API"],
    descricao: "App de clima bonito com previs√µes",
    status: "Conclu√≠do",
    github: "github.com/usuario/weather",
    live: "weather-dash.netlify.app",
    destaques: [
      "üå§Ô∏è Previs√µes de 7 dias",
      "üìç Clima baseado em localiza√ß√£o",
      "üìä Gr√°ficos interativos",
      "üé® √çcones de clima animados"
    ]
  }
];

// Atualmente trabalhando em...
const projetoAtual = {
  nome: "Assistente de C√≥digo IA",
  descricao: "Extens√£o VS Code para ajuda com IA",
  progresso: "75%",
  lancamento_previsto: "Q2 2024"
};

console.log("Confira meu trabalho! üíª");`,

  // Conte√∫do espec√≠fico para cada projeto
  "_projetos/ecommerce": `// Projeto: Plataforma E-commerce

/**
 * Detalhes do Projeto
 * ==================
 *
 * Nome: Plataforma E-commerce
 * Status: Produ√ß√£o
 * GitHub: github.com/usuario/ecommerce
 * Live: minhaloja.vercel.app
 */

// Tecnologias utilizadas
const tech = {
  frontend: ["Next.js", "TypeScript", "TailwindCSS", "Zustand"],
  backend: ["Node.js", "Express", "TypeScript"],
  database: ["PostgreSQL", "Prisma"],
  payment: ["Stripe"],
  deployment: ["Vercel", "Railway"]
};

// Funcionalidades principais
const features = [
  "Cat√°logo de produtos com filtragem avan√ßada",
  "Carrinho de compras persistente",
  "Processamento de pagamentos com Stripe",
  "Dashboard admin para gerenciamento de produtos",
  "Sistema de autentica√ß√£o com NextAuth.js",
  "Analytics em tempo real",
  "Design responsivo para todas as telas"
];

// Desafios e solu√ß√µes
const challenges = {
  "Processamento de pagamentos": "Implementa√ß√£o de webhooks do Stripe para confirmar transa√ß√µes",
  "Performance": "Otimiza√ß√£o com ISR (Incremental Static Regeneration)",
  "SEO": "Implementa√ß√£o de meta tags din√¢micas e sitemap",
  "UX": "Testes de usabilidade com usu√°rios reais"
};

// Aprendizados
const learnings = [
  "Integra√ß√£o de gateway de pagamento",
  "Otimiza√ß√£o de performance em Next.js",
  "Modelagem de dados para e-commerce",
  "Implementa√ß√£o de dashboards admin"
];

console.log("Projeto completo com foco em experi√™ncia do usu√°rio e escalabilidade");`,

  "_projetos/taskapp": `// Projeto: App de Gerenciamento de Tarefas

/**
 * Detalhes do Projeto
 * ==================
 *
 * Nome: TaskFlow - Gerenciamento de Tarefas
 * Status: Desenvolvimento (80% conclu√≠do)
 * GitHub: github.com/usuario/taskapp
 */

// Tecnologias utilizadas
const tech = {
  frontend: ["React", "TypeScript", "Chakra UI", "React DnD"],
  backend: ["Node.js", "Express", "Socket.io"],
  database: ["MongoDB", "Mongoose"],
  deployment: ["Netlify", "Render"]
};

// Funcionalidades principais
const features = [
  "Quadros Kanban com arrastar e soltar",
  "Colabora√ß√£o em tempo real com Socket.io",
  "Sistema de coment√°rios em tarefas",
  "Notifica√ß√µes em tempo real",
  "Atribui√ß√£o de tarefas a membros",
  "Filtros e busca avan√ßada",
  "Modo offline com sincroniza√ß√£o"
];

// Desafios e solu√ß√µes
const challenges = {
  "Sincroniza√ß√£o em tempo real": "Implementa√ß√£o de Socket.io com salas por projeto",
  "Conflitos de edi√ß√£o": "Sistema de bloqueio tempor√°rio durante edi√ß√£o",
  "Performance": "Virtualiza√ß√£o de listas para grandes volumes de tarefas",
  "Offline mode": "IndexedDB para armazenamento local com sincroniza√ß√£o"
};

// Pr√≥ximos passos
const nextSteps = [
  "Implementar integra√ß√£o com calend√°rio",
  "Adicionar relat√≥rios e analytics",
  "Desenvolver aplicativo m√≥vel com React Native",
  "Implementar sistema de templates de projetos"
];

console.log("Projeto focado em produtividade e colabora√ß√£o em equipe");`,

  "_projetos/weather": `// Projeto: Dashboard do Clima

/**
 * Detalhes do Projeto
 * ==================
 *
 * Nome: WeatherVue - Dashboard do Clima
 * Status: Conclu√≠do
 * GitHub: github.com/usuario/weather
 * Live: weather-dash.netlify.app
 */

// Tecnologias utilizadas
const tech = {
  frontend: ["Vue.js", "Vuex", "TailwindCSS", "Chart.js"],
  backend: ["Express", "Node.js"],
  apis: ["OpenWeather API", "Mapbox API"],
  deployment: ["Netlify", "Heroku"]
};

// Funcionalidades principais
const features = [
  "Previs√£o do tempo para 7 dias",
  "Gr√°ficos interativos de temperatura e precipita√ß√£o",
  "Geolocaliza√ß√£o autom√°tica",
  "Busca por cidade com autocompletar",
  "Alertas de clima extremo",
  "Mapa interativo com camadas de clima",
  "Modo escuro/claro autom√°tico baseado no hor√°rio"
];

// Desafios e solu√ß√µes
const challenges = {
  "Limita√ß√µes de API": "Implementa√ß√£o de cache para reduzir chamadas",
  "Visualiza√ß√£o de dados": "Gr√°ficos personalizados com Chart.js",
  "UX em dispositivos m√≥veis": "Design responsivo com abordagem mobile-first",
  "Performance": "Lazy loading e code splitting"
};

// M√©tricas e resultados
const metrics = {
  usuarios: "5,000+ mensais",
  satisfacao: "4.8/5 estrelas",
  performance: "98/100 no Lighthouse",
  retencao: "65% retornam semanalmente"
};

console.log("Projeto com foco em UX e visualiza√ß√£o de dados meteorol√≥gicos");`,

  _habilidades: `// Minhas Habilidades e Compet√™ncias üí™

const habilidades = {
  frontend: {
    linguagens: ["JavaScript", "TypeScript", "HTML5", "CSS3"],
    frameworks: ["React", "Next.js", "Vue.js", "Angular"],
    styling: ["Tailwind CSS", "Styled Components", "SCSS", "CSS Modules"],
    ferramentas: ["Webpack", "Vite", "ESLint", "Prettier"]
  },

  backend: {
    linguagens: ["Node.js", "Python", "Java", "PHP"],
    frameworks: ["Express.js", "Fastify", "Django", "Spring Boot"],
    databases: ["PostgreSQL", "MongoDB", "MySQL", "Redis"],
    orms: ["Prisma", "TypeORM", "Mongoose", "Sequelize"]
  },

  devops: {
    cloud: ["AWS", "Google Cloud", "Vercel", "Netlify"],
    containers: ["Docker", "Docker Compose", "Kubernetes"],
    ci_cd: ["GitHub Actions", "GitLab CI", "Jenkins"],
    monitoring: ["Sentry", "LogRocket", "New Relic"]
  },

  ferramentas: {
    versionamento: ["Git", "GitHub", "GitLab", "Bitbucket"],
    design: ["Figma", "Adobe XD", "Photoshop"],
    apis: ["REST", "GraphQL", "WebSockets", "tRPC"],
    testes: ["Jest", "Cypress", "Testing Library", "Vitest"]
  },

  softSkills: [
    "Trabalho em equipe",
    "Comunica√ß√£o efetiva",
    "Resolu√ß√£o de problemas",
    "Pensamento cr√≠tico",
    "Adaptabilidade",
    "Lideran√ßa t√©cnica",
    "Mentoria",
    "Gest√£o de tempo"
  ],

  certificacoes: [
    "AWS Cloud Practitioner",
    "Google Analytics Certified",
    "MongoDB University Certificate"
  ]
};

// N√≠vel de experi√™ncia
const nivelExperiencia = {
  javascript: "Avan√ßado",
  react: "Avan√ßado",
  nodejs: "Avan√ßado",
  typescript: "Intermedi√°rio",
  python: "Intermedi√°rio",
  aws: "Intermedi√°rio",
  docker: "Intermedi√°rio"
};

console.log("Sempre aprendendo e evoluindo! üöÄ");`,

  _contato: `// Vamos nos Conectar! üì¨

const infoContato = {
  email: "othavio.quiliao@exemplo.com",
  telefone: "+55 11 99999-9999",
  localizacao: "S√£o Paulo, SP - Brasil",
  fuso_horario: "GMT-3 (BRT)",

  social: {
    github: "github.com/othavio-quiliao",
    linkedin: "linkedin.com/in/othavio-quiliao",
    twitter: "@othavio_dev",
    portfolio: "othavio.dev"
  },

  contato_preferido: "email", // ou "linkedin"
};

// Sinta-se √† vontade para entrar em contato!
console.log("Vamos construir algo incr√≠vel juntos! ‚ú®");

export default infoContato;`,
};

// Mapeamento de tecnologias por arquivo
const fileTechnologies: Record<
  string,
  Array<{ name: string; icon: string; color: string }>
> = {
  _sobre: [
    { name: "JavaScript", icon: "js", color: "#F7DF1E" },
    { name: "React", icon: "react", color: "#61DAFB" },
    { name: "Next.js", icon: "nextjs", color: "#000000" },
  ],
  _projetos: [
    { name: "Next.js", icon: "nextjs", color: "#000000" },
    { name: "TypeScript", icon: "ts", color: "#3178C6" },
    { name: "Node.js", icon: "nodejs", color: "#339933" },
    { name: "MongoDB", icon: "mongodb", color: "#47A248" },
    { name: "PostgreSQL", icon: "postgres", color: "#336791" },
    { name: "Vue.js", icon: "vue", color: "#4FC08D" },
    { name: "Express", icon: "express", color: "#000000" },
  ],
  "_projetos/ecommerce": [
    { name: "Next.js", icon: "nextjs", color: "#000000" },
    { name: "TypeScript", icon: "ts", color: "#3178C6" },
    { name: "TailwindCSS", icon: "tailwind", color: "#06B6D4" },
    { name: "PostgreSQL", icon: "postgres", color: "#336791" },
    { name: "Prisma", icon: "prisma", color: "#2D3748" },
    { name: "Stripe", icon: "stripe", color: "#008CDD" },
    { name: "Vercel", icon: "vercel", color: "#000000" },
  ],
  "_projetos/taskapp": [
    { name: "React", icon: "react", color: "#61DAFB" },
    { name: "TypeScript", icon: "ts", color: "#3178C6" },
    { name: "Node.js", icon: "nodejs", color: "#339933" },
    { name: "MongoDB", icon: "mongodb", color: "#47A248" },
    { name: "Socket.io", icon: "socketio", color: "#010101" },
    { name: "Express", icon: "express", color: "#000000" },
  ],
  "_projetos/weather": [
    { name: "Vue.js", icon: "vue", color: "#4FC08D" },
    { name: "Express", icon: "express", color: "#000000" },
    { name: "TailwindCSS", icon: "tailwind", color: "#06B6D4" },
    { name: "Chart.js", icon: "js", color: "#F7DF1E" },
    { name: "Netlify", icon: "netlify", color: "#00C7B7" },
  ],
  _habilidades: [
    { name: "JavaScript", icon: "js", color: "#F7DF1E" },
    { name: "TypeScript", icon: "ts", color: "#3178C6" },
    { name: "React", icon: "react", color: "#61DAFB" },
    { name: "Node.js", icon: "nodejs", color: "#339933" },
    { name: "Python", icon: "python", color: "#3776AB" },
    { name: "Docker", icon: "docker", color: "#2496ED" },
    { name: "AWS", icon: "aws", color: "#FF9900" },
    { name: "Google Cloud", icon: "gcp", color: "#4285F4" },
    { name: "Tailwind CSS", icon: "tailwind", color: "#06B6D4" },
  ],
  _contato: [
    { name: "HTML", icon: "html", color: "#E34F26" },
    { name: "CSS", icon: "css", color: "#1572B6" },
    { name: "JavaScript", icon: "js", color: "#F7DF1E" },
  ],
};

// Mapear extens√µes de arquivo para linguagens do SyntaxHighlighter
const getLanguageFromFileType = (
  fileType: string,
  fileName: string
): string => {
  if (fileName.toLowerCase().includes("readme")) return "markdown";
  if (fileName.toLowerCase().includes("package")) return "json";

  switch (fileType.toLowerCase()) {
    case "javascript":
    case "js":
      return "javascript";
    case "typescript":
    case "ts":
      return "typescript";
    case "json":
      return "json";
    case "markdown":
    case "md":
      return "markdown";
    case "html":
      return "html";
    case "css":
      return "css";
    case "python":
    case "py":
      return "python";
    default:
      return "javascript"; // fallback
  }
};

export function CodeEditor({ fileName, fileType }: CodeEditorProps) {
  const content =
    fileContents[fileName.toLowerCase()] ||
    `// Arquivo n√£o encontrado: ${fileName}`;
  const language = getLanguageFromFileType(fileType, fileName);
  const technologies = fileTechnologies[fileName.toLowerCase()] || [];

  return (
    <div className="flex flex-1 w-full h-full gap-10">
      <div className="flex flex-1 w-1/2 bg-background overflow-hidden border-r border-gradient-to-r from-transparent to-background h-full">
        <CodeBlock language={language}>{content}</CodeBlock>
      </div>
      <div className="flex flex-1 w-1/2 bg-background overflow-hidden border-x border-gradient-to-r from-transparent to-background h-full">
        <SideContent
          technologies={technologies}
          title="Tecnologias utilizadas"
        />
      </div>
    </div>
  );
}
